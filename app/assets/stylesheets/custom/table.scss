// Import colors-ui
@import "colors";

@import "../common/variables";

// Declare new variables
$font-color-th: #666;
$font-color-th-link: #2c69b8;

.table {
	> thead > tr > th,
	> tbody > tr > th {
		border-bottom-width: 1px;
		color: $font-color-th;
		font: {
			family: $font-family-base;
			size: $font-size-base-xs;
			weight: bold;
		}
		text-transform: uppercase;
		vertical-align: middle;
		> p {
			display: table;
			width: 100%;
			> a {
				display: table-cell;
				max-width: 200px;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
				@media (max-width: $screen-sm-min - 1) {
					max-width: 100px;
				}
				&.asc,
				&.desc {
					position: relative;
					padding-right: 20px;
					&:after {
						font: {
							family: "Glyphicons Halflings";
							style: normal;
							weight: 400;
						}
						line-height: 1;
					    -webkit-font-smoothing: antialiased;
    					-moz-osx-font-smoothing: grayscale;
    					position: absolute;
    					right: 0;
    					top: 1px;
					}
				}
				&.desc:after {
					content: "\e252";
				}
				&.asc:after {
					content: "\e253";
				}
			}
		}
		a {
			color: $font-color-th-link;
			cursor: pointer;
			&:hover,
			&:focus,
			&.focus {
				color: darken($font-color-th-link, 10%);
			}
		}
	}
	> thead,
	> tbody {
		> tr {
			> th,
			> td {
				border: none;
				padding-bottom: 18px;
				padding-top: 18px;
			}
		}
	}
	> tbody,
	> tfoot {
		> tr {
			> th:first-child {
				color: $font-color-th;
			}
			> td {
				color: $gray-base;
				font: {
					family: $font-family-base;
					size: $font-size-base-sm;
				}
				&.td-checkbox,
				&.td-radio {
					width: 1%;
				}
				&.td-actions {
					text-align: right;
					vertical-align: middle;
				}
				&.pending {
					background-color: darken($bg-lightgrey, 10%);
				}
				.progress {
					margin: 0;
				}
			}
		}
	}
}

.table-hover {
	> tbody {
		> tr {
			&:hover {
				> th,
				> td {
					background-color: $bg-lightgrey;
				}
			}
		}
	}
}

.table-noborder {
	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				border: none;
			}
		}
	}
}

// table-sticky js
.sticky-wrap {
	margin-bottom: 15px;
	overflow-x: auto;
	overflow-y: hidden;
	position: relative;
	width: 100%;
	.sticky-thead,
	.sticky-col,
	.sticky-intersect {
		font-weight: bold;
		left: 0;
		opacity: 0;
		position: absolute;
		-webkit-transition: .25s cubic-bezier(0.1, 0.82, 0.25, 1);
		transition: .25s cubic-bezier(0.1, 0.82, 0.25, 1);
		top: 0;
		width: auto; // Prevent table from stretching to full size
	}
	.sticky-thead {
		box-shadow: 0 2px 2px -1px rgba(#000, .1);
		width: 100% !important; // Force width - problem in webkit.
	}
	.sticky-intersect {
		opacity: 1;
		th {
			background-color: #f2f2f2;
			color: #4D4D4D;
		}
	}
}

.table-striped > tbody > tr:nth-of-type(2n+1){
	background:#f5f5f5;
}
.sticky-thead {
	> thead {
		> tr {
			> th,
			> td {
				background-color: #fff;
				border: 1px solid #ddd;
				color: $font-color-th;
				font: {
					size: $font-size-base-xs;
				}
				padding: 8px;
				text-transform: uppercase;
				> p {
					display: table;
					width: 100%;
					> a {
						display: table-cell;
						max-width: 200px;
						overflow: hidden;
						text-overflow: ellipsis;
						white-space: nowrap;
						@media (max-width: $screen-sm-min - 1) {
							max-width: 100px;
						}
						&.asc,
						&.desc {
							position: relative;
							padding-right: 20px;
							&:after {
								font: {
									family: "Glyphicons Halflings";
									style: normal;
									weight: 400;
								}
								line-height: 1;
							    -webkit-font-smoothing: antialiased;
		    					-moz-osx-font-smoothing: grayscale;
		    					position: absolute;
		    					right: 0;
		    					top: 1px;
							}
						}
						&.desc:after {
							content: "\e252";
						}
						&.asc:after {
							content: "\e253";
						}
					}
				}
				a {
					color: $font-color-th-link;
					cursor: pointer;
					&:hover,
					&:focus,
					&.focus {
						color: darken($font-color-th-link, 10%);
					}
				}
			}
		}
	}
}

// Not needed for sticky header/column functionality
.sticky-wrap.overflow-y {
	overflow-y: auto;
	max-height: 50vh;
}
.table > caption + thead > tr:first-child > td, .table > caption + thead > tr:first-child > th, .table > colgroup + thead > tr:first-child > td, .table > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr:first-child > td, .table > thead:first-child > tr:first-child > th{
	border-bottom:1px solid #ebebeb;
}
